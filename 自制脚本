local OrionLib = loadstring(game:HttpGet("https://raw.githubusercontent.com/shlexware/Orion/main/source"))()

local WindowConfig = {
    Name = "身份检测",
    ConfigFolder = "IdentityDetection",
    SaveConfig = true,
    HidePremium = false,
    IntroEnabled = true,
    IntroText = "欢迎使用身份检测功能！",
    CloseCallback = function() print("窗口已关闭。") end,
    ShowIcon = true,
    Icon = "rbxassetid://8834748103",
    IntroIcon = "rbxassetid://8834748103",
}

local Window = OrionLib:MakeWindow(WindowConfig)

local Tab = Window:Tab("身份检测", "10882439086")
local Section = Tab:section("身份检测")

-- 创建一个用于显示身份的文字标签
local IdentityLabel = Section:AddLabel({
    Text = "成员",
    FontSize = 20,
    Color = Color3.fromRGB(0, 0, 255), -- 蓝色
    Position = UDim2.new(0.5, 0, 0.5, 0),
    AnchorPoint = Vector2.new(0.5, 0.5)
})

-- 用户名单及其对应的身份
local usernames = {
    ["JohnDoe"] = "开发者",
    ["JaneSmith"] = "内测人员",
    ["AliceBlue"] = "成员",
    -- 更多用户名和身份...
}

-- 根据用户名单匹配最佳的身份
local function MatchBestIdentity(username)
    local identity = usernames[username] or "成员"
    return identity
end

-- 获取玩家用户名
local playerName = game.Players.LocalPlayer.Name

-- 开始检测并匹配最佳身份
local function StartDetection()
    local identities = {"成员", "内测人员", "开发者"}
    local colors = {Color3.fromRGB(0, 0, 255), Color3.fromRGB(128, 0, 128), Color3.fromRGB(255, 0, 0)} -- 蓝色、紫色、红色
    
    -- 循环三次
    for i = 1, 3 do
        for j, identity in ipairs(identities) do
            IdentityLabel.Text = identity
            IdentityLabel.Color = colors[j]
            wait(0.5)
        end
    end
    
    -- 匹配最佳身份
    local bestIdentity = MatchBestIdentity(playerName)
    IdentityLabel.Text = bestIdentity
    IdentityLabel.Color = colors[tonumber(bestIdentity == "成员" and 1 or bestIdentity == "内测人员" and 2 or 3)]
    
    -- 等待两秒
    wait(2)
    
    -- 执行接下来的脚本
    ExecuteNextScript()
end

local function ExecuteNextScript()
    print("执行接下来的脚本...")
    -- 这里可以添加执行接下来脚本的逻辑
end

-- 启动检测
StartDetection()