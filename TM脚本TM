local ScreenGui = Instance.new("ScreenGui")
local Label = Instance.new("TextLabel")
local UserStatuses = {
    "Normal Member",
    "Inner Circle Member",
    "Developer"
}
local Colors = {
    Color3.fromRGB(0, 119, 255), -- Blue color for normal member
    Color3.fromRGB(128, 0, 128), -- Purple color for inner circle member
    Color3.fromRGB(255, 0, 0) -- Red color for developer
}
local CurrentStatus = "Normal Member" -- Replace this with a function call that gets the user's actual status

-- Set up the ScreenGui
ScreenGui.Parent = game.CoreGui
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.AlwaysOnTop

-- Set up the TextLabel
Label.Parent = ScreenGui
Label.Name = "StatusLabel"
Label.BackgroundColor3 = Color3.fromRGB(248, 248, 248)
Label.BackgroundTransparency = 1
Label.Size = UDim2.new(0, 200, 0, 50)
Label.Position = UDim2.new(0.5, -100, 0.5, -25)
Label.Font = Enum.Font.Gotham
Label.TextSize = 18
Label.TextColor3 = Colors[1] -- Start with blue
Label.Text = "Checking..."

-- Function to animate text color changes
local function AnimateTextChange(text, color)
    Label.Text = text
    Label.TextColor3 = color
end

-- Function to check user status and display it
local function CheckUserStatus()
    local tweenService = game:GetService("TweenService")

    -- Cycle through statuses
    for i, status in ipairs(UserStatuses) do
        local colorIndex = math.min(i, #Colors)
        AnimateTextChange(status, Colors[colorIndex])
        wait(0.3)
    end

    -- Display final status
    local finalStatusColor = Colors[1] -- Default to blue
    if CurrentStatus == "Inner Circle Member" then
        finalStatusColor = Colors[2]
    elseif CurrentStatus == "Developer" then
        finalStatusColor = Colors[3]
    end
    AnimateTextChange(CurrentStatus, finalStatusColor)
end

-- Call the function to check the status
CheckUserStatus()